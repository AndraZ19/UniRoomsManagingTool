@model WebApplication6.ViewModels.EventViewModel
@using WebApplication6.Controllers;

<script src='~/Scripts/jquery-3.4.1.js'></script>
<script src='~/Scripts/moment.js'></script>
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Events</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "Introduceti numele evenimentului!", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Start_time, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Start_time, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Start_time, "Introduceti data si ora de start, respectand formatul ZZ:LL:AAAA HH:MM", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.End_time, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.End_time, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.End_time, "Introduceti data si ora de sfarsit, respectand formatul ZZ:LL:AAAA HH:MM", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.CursId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CursId, (IEnumerable<SelectListItem>)ViewData["Classlist"], "[Selectati Cursul]", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CursId, "Alegeti cursul!", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalaId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SalaId, new SelectList(Model.sali, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SalaId, "Alegeti sala!", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PcReq, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.PcReq)
                @Html.ValidationMessageFor(model => model.PcReq, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.VideoReq, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.VideoReq)
                @Html.ValidationMessageFor(model => model.VideoReq, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>



    </div>
}


<script type="text/javascript">
    var sali = '@Url.Action("GetSala","Event")';
    var saliPC = '@Url.Action("GetPCSala","Event")';
    var saliVideo = '@Url.Action("GetVideoSala","Event")';
    var saliVideoPC = '@Url.Action("GetVideoPCSala","Event")';

    var listaSali = $('#SalaId');

    $(document).ready(function () {
        function SetRoomStatus() {

                var currDate =$("#Start_time").val().toString();
        

            
            var JSONString = currDate;
        
            $.post('@Url.Action("SetRoomsToStatus", "Event")', { JSONString });
        };
               function SetRoomStatusEnd() {

                var endDate = $("#End_time").val().toString();

      
            var JSONStringEnd = endDate;

            $.post('@Url.Action("SetRoomsToStatusEnd", "Event")', { JSONStringEnd });
        };
               
            
        $("#Start_time").change(SetRoomStatus);
        $("#End_time").change(SetRoomStatusEnd);


            $("#CursId").change(function () {
                listaSali.empty();


                var val = $(this).val();
                $.getJSON(sali, { id: val }, function (data) {
                    if (!data) {
						return;
                    }
                    $.each(data, function (index, item) {
                        listaSali.append($('<option></option>').val(item.Value).text(item.Text));
                    });
                });
            });

        function checkBoxesChecked() {
            var chkVid = $("#VideoReq").is(":checked");
            var chkPC = $("#PcReq").is(":checked");

            var val = $("#CursId").val();

            if (chkVid && chkPC) {
                listaSali.empty();

                $.getJSON(saliVideoPC, { id: val }, function (data) {
                    if (jQuery.isEmptyObject(data)) {

                        $.getJSON(sali, { id: val }, function (data) {
                            if (jQuery.isEmptyObject(data)) {
                                return;
                            }
                            else {
                                $.each(data, function (index, item) {
                                    listaSali.append($('<option></option>').val(item.Value).text(item.Text));
                                });
                            alert("Nu exista sali cu proprietatile alese. Alegeti o sala fara PC si Video sau reprogramati.");
                            };
                        });
                    }
                    $.each(data, function (index, item) {
                        listaSali.append($('<option></option>').val(item.Value).text(item.Text));
                    });
                });
            }
            else if (chkVid) {
                listaSali.empty();

                $.getJSON(saliVideo, { id: val }, function (data) {
                    if (jQuery.isEmptyObject(data)) {

                        $.getJSON(sali, { id: val }, function (data) {
                            if (jQuery.isEmptyObject(data)) {
                                return;
                            }
                            $.each(data, function (index, item) {
                                listaSali.append($('<option></option>').val(item.Value).text(item.Text));
                            });
                            alert("Nu exista sali cu proprietatile alese. Alegeti o sala fara Video sau reprogramati.");
                        });
                       
                    }
                    else {
                        $.each(data, function (index, item) {
                            listaSali.append($('<option></option>').val(item.Value).text(item.Text));
                        });
                    };
                });
            }
            else if (chkPC) {
                listaSali.empty();

                $.getJSON(saliPC, { id: val }, function (data) {
                    if (jQuery.isEmptyObject(data) ) {

                        $.getJSON(sali, { id: val }, function (data) {
                            if (jQuery.isEmptyObject(data)) {
                                return;
                            }
                            $.each(data, function (index, item) {
                                listaSali.append($('<option></option>').val(item.Value).text(item.Text));
                            });
                        });
                     alert("Nu exista sali cu proprietatile alese. Alegeti o sala fara PC sau reprogramati.");
                    }
                    else {
                        $.each(data, function (index, item) {
                            listaSali.append($('<option></option>').val(item.Value).text(item.Text));
                        });
                    };
                });
            }
            else {
                
                var val = $(this).val();
                $.getJSON(sali, { id: val }, function (data) {
                    if (jQuery.isEmptyObject(data)) {
						return;
                    }
                    $.each(data, function (index, item) {
                        listaSali.append($('<option></option>').val(item.Value).text(item.Text));

                    });
                });
            }
                    
            };
        $("#VideoReq").change(checkBoxesChecked);
        $("#PcReq").change(checkBoxesChecked);

        });
    

</script>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
